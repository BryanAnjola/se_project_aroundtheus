!function(){"use strict";var e={d:function(t,n){for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}};e.d({},{Zf:function(){return g}});class t{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(e){e.classList.add("popup_opened"),document.addEventListener("keydown",handleEscapePress)}close(e){e.classList.remove("popup_opened"),document.removeEventListener("keydown",handleEscapePress)}_handleEscClose(e){if("Escape"==e.key){const e=document.querySelector(".popup_opened");close(e)}}setEventListeners(){this._popupElement.addEventListener("click",(()=>this.close()))}}function n(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",r)}function o(e){e.classList.add("modal_opened"),document.addEventListener("keydown",r)}function r(e){"Escape"==e.key&&(document.querySelector(".modal_opened"),n(modal))}function s(e){(e.target===e.currentTarget||e.target.classList.contains("modal__close"))&&n(e.currentTarget)}class i{constructor(e,t){this._cardData=e,this._link=e.link,this._name=e.name,this._templateSelector=t}_setEventListeners(){this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete"),this._likeButton.addEventListener("click",(()=>this._toggleLike())),this._deleteButton.addEventListener("click",(()=>this._handleDeleteButton())),this._cardImageEl.addEventListener("click",(e=>this._handlePreviewImage(e)))}_toggleLike=()=>{this._element.querySelector(".card__like-button").classList.toggle("card__like-button-active")};_handleDeleteButton=()=>{this._element.remove(),this._element=null};_handlePreviewImage(){const e=document.querySelector(".modal__image");document.querySelector(".modal__text").textContent=this._name,e.src=this._link,o(g)}_getTemplate(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}createCardElement(){return this._cardElement=this._getTemplate().cloneNode(!0),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardTitleEl.textContent=this._name,this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._setEventListeners(),this._element=this._cardElement,this._cardElement}}class a{constructor(e,t){this._settings=e,this._form=t,this._submitButton=this._form.querySelector(e.submitButtonSelector),this._form.querySelectorAll(this._settings.inputSelector),this._inputList=[...this._form.querySelectorAll(this._settings.inputSelector)]}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))})),this.disableSubmitButton()}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e)})),this.disableSubmitButton()}disableSubmitButton(){this._submitButton.disabled=!0}enableSubmitButton(){this._submitButton.disabled=!1}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_showInputError(e,t){const n=this._form.querySelector(`#${e.id}-error`);n.textContent=t,n.classList.add(this._settings.inputErrorClass),e.classList.add(this._settings.inputErrorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);t.textContent="",e.classList.remove(this._settings.inputErrorClass),t.classList.remove(this._settings.inputErrorClass)}_checkFormValidity=()=>this._inputList.every((e=>e.validity.valid));_toggleButtonState(){this._checkFormValidity()?this.enableSubmitButton():this.disableSubmitButton()}}document.querySelector("#card-template").content.firstElementChild;const l=document.querySelector("#profile-edit-button"),c=document.querySelector("#profile-edit-modal"),u=(document.querySelector("#profile-close-button"),document.querySelector(".profile__title")),d=document.querySelector(".profile__description"),m=document.querySelector("#profile-title-input"),p=document.querySelector("#profile-description-input"),_=document.querySelector("#profile-add-modal"),h=c.querySelector("#profile-edit-form"),S=(document.querySelector("#add-close-button"),document.querySelector("#add-title-input")),y=document.querySelector("#add-url-input"),E=document.querySelector(".profile__add-button"),f=_.querySelector("#add-edit-form"),g=document.querySelector("#card-open-modal"),v=(_.querySelector(".form__popup-button"),document.querySelector(".modal__image"),document.querySelector(".modal__text"),g.querySelector("#image-close-button"),document.querySelector(".gallery__cards")),b=new class{constructor(e){let{nameSelector:t,titleSelector:n}=e;this._name=document.querySelector(t),this._title=document.querySelector(n)}getUserInfo(){return{name:this._name.textContent,title:this._title.textContent}}setUserInfo(e){let{nameInput:t,titleInput:n}=e;this._name.textContent=t,this._title.textContent=n}}(u,d),q=new class extends t{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._modalInputs=this._popupElement.querySelector("#profile-description-input"),this._handleFormSubmit=t}_getInputValues(){const e={};return this._modalInputs.forEach((t=>{e[t.name]=t.value})),e}_setEventListeners(){super._setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.closeModal()}))}close(){this._popupForm.reset(),super.close()}}("#profile-edit-form",(()=>{b.setUserInfo(nameInput,titleInput),q.openModal()})),L=new class extends t{constructor(e){super(e),this._popupElement=document.querySelector(e),this._modalCaption=this._popupElement.querySelector(".modal__text"),this._modalImage=this._popupElement.querySelector(".modal__image")}open(){this._modalCaption.textContent=this._name,this._modalImage.src=this._link,this._modalImage.alt=this._name,super.open()}close(){this._modalCaption.textContent="",this._modalImage.src="",this._modalImage.alt="",super.close()}}("#card-open-modal");function k(e){L.open(e),console.log(e)}l.addEventListener("click",(()=>{m.value=u.textContent,p.value=d.textContent,o(c)})),h.addEventListener("submit",(e=>{e.preventDefault(),u.textContent=m.value,d.textContent=p.value,n(c)})),E.addEventListener("click",(()=>{o(_)})),f.addEventListener("submit",(e=>{e.preventDefault();const t=S.value,o=y.value;S.value="",y.value="",B.disableSubmitButton();const r=w({name:t,link:o});v.prepend(r),n(_)}));const w=e=>new i(e,"#card-template",k).createCardElement();[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountians",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}].forEach((e=>{const t=w(e);v.append(t)})),c.addEventListener("mousedown",s),_.addEventListener("mousedown",s),g.addEventListener("mousedown",s);const I={formSelector:".modal__form",inputSelector:".form__input",submitButtonSelector:".form__popup-button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"popup__input_type_error"},C=new a(I,h),B=new a(I,f);B.enableValidation(),C.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,